<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPF"
        xmlns:AutoLotModel="clr-namespace:AutoLotModel;assembly=AutoLotModel" x:Class="WPF.MainWindow" mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="customerViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Customer}, CreateList=True}"/>
        <CollectionViewSource x:Key="roomViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoLotModel:Room}, CreateList=True}"/>
        <CollectionViewSource x:Key="customerReservationsViewSource" Source="{Binding Reservations, Source={StaticResource customerViewSource}}"/>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <GroupBox x:Name="gbOperations" Header="" HorizontalAlignment="Left" Height="100" Margin="45,45,0,0" VerticalAlignment="Top" Width="115" Button.Click="gbOperations_Click">
            <StackPanel x:Name="spOperations">
                <Button Name="btnNew" Content="New" HorizontalAlignment="Left" Margin="13,6,0,0" VerticalAlignment="Top" Width="75" Button.Click="btnNew_Click"/>
                <Button Name="btnEdit" Content="Edit" HorizontalAlignment="Left" Margin="13,1,0,0" VerticalAlignment="Top" Width="75" Button.Click="btnEdit_Click"/>
                <Button Name="btnDelete" Content="Delete" HorizontalAlignment="Left" Margin="13,1,0,0" VerticalAlignment="Top" Width="75" Button.Click="btnDelete_Click"/>
            </StackPanel>
        </GroupBox>
        <GroupBox x:Name="gbActions" Header="" HorizontalAlignment="Left" Height="80" Margin="45,170,0,0" VerticalAlignment="Top" Width="115">
            <StackPanel x:Name="spActions" Margin="0,0,0,6.667" RenderTransformOrigin="0.5,0.5">

                <Button x:Name="btnSave" Content="Save" HorizontalAlignment="Left" Margin="13,1,0,0" VerticalAlignment="Top" Width="75" Button.Click="btnSave_Click">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="IsEnabled" Value="False" />
                            <Style.Triggers>
                                <!-- Butonul Save va fi inactiv daca exista erori de validare-->
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=lastNameTextBox, Path=(Validation.HasError)}" Value="false" />
                                        <Condition Binding="{Binding ElementName=firstNameTextBox, Path=(Validation.HasError)}" Value="false"/>
                                        
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button x:Name="btnCancel" Content="Cancel" HorizontalAlignment="Left" Margin="13,1,0,0" VerticalAlignment="Top" Width="75" Button.Click="btnCancel_Click"/>

            </StackPanel>
        </GroupBox>
        <TabControl x:Name="tbCtrlAutoLot" HorizontalAlignment="Left" Height="411" Margin="200,0,0,0" VerticalAlignment="Top" Width="583">
            <TabItem Header="Customers">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerViewSource}" Margin="10,0,0,12">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="41*"/>
                        <ColumnDefinition Width="242*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="customerDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="18.333,25,60,185" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.Column="1">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="customerIdColumn" Binding="{Binding CustomerId}" Header="Customer Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="firstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid1" HorizontalAlignment="Left" Margin="98.333,250,0,0" VerticalAlignment="Top" Height="96" Width="182" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Customer Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="customerIdTextBox" IsEnabled="False" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding CustomerId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="firstNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                        <Label Content="Last Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="lastNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                    </Grid>


                    <Button Name="btnPrev" Content="Previous" HorizontalAlignment="Left" Margin="18.333,205,0,0" VerticalAlignment="Top" Width="75" RenderTransformOrigin="0.556,2.645" Grid.Column="1" Button.Click="btnPrev_Click"/>
                    <Button Name="btnNext" Content="Next" HorizontalAlignment="Left" Margin="349.333,205,0,0" VerticalAlignment="Top" Width="75" Grid.Column="1" Button.Click="btnNext_Click"/>
                </Grid>

            </TabItem>
            <TabItem Header="Rooms">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource roomViewSource}">
                    <DataGrid x:Name="roomDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="59,30,40,207" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="roomIdColumn" Binding="{Binding RoomId}" Header="Room Id" Width="SizeToHeader" />
                            <DataGridTextColumn x:Name="typeColumn" Binding="{Binding Type}" Header="Type" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="styleColumn" Binding="{Binding Style}" Header="Style" Width="SizeToHeader"/>
                            
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid2" HorizontalAlignment="Left" Margin="180,250,0,0" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Room Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="roomIdTextBox" IsEnabled="False" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding RoomId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Style:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="styleTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding Style, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Type:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="typeTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding Type, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                    </Grid>
                    <Button Name="btnPrev1" Content="Previous" HorizontalAlignment="Left" Margin="59,194,0,0" VerticalAlignment="Top" Width="75" Button.Click="btnPrev1_Click"/>
                    <Button Name="btnNext1" Content="Next" HorizontalAlignment="Left" Margin="461,194,0,0" VerticalAlignment="Top" Width="75" Button.Click="btnNext1_Click"/>

                </Grid>
            </TabItem>
            <TabItem Header="Reservations">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource customerReservationsViewSource}">
                    <ComboBox Name="cmbCustomers" HorizontalAlignment="Left" Margin="67,80,0,0" VerticalAlignment="Top" Width="120" SelectedValue="{Binding ElementName=reservationsDataGrid, Path=SelectedItem.CustomerId, Mode=OneWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="FirstName" />
                                            <Binding Path="LastName" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Label Content="Customers" HorizontalAlignment="Left" Margin="67,34,0,0" VerticalAlignment="Top" Height="25" Width="86"/>
                    <ComboBox Name="cmbRooms" HorizontalAlignment="Left" Margin="362,80,0,0" VerticalAlignment="Top" Width="120" SelectedValue="{Binding ElementName=reservationsDataGrid, Path=SelectedItem.RoomId, Mode=OneWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding Path="Type"/>
                                            <Binding Path="Style"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Label Content="Rooms" HorizontalAlignment="Left" Margin="377,34,0,0" VerticalAlignment="Top" Width="65" RenderTransformOrigin="0.764,0.603"/>
                    <DataGrid x:Name="reservationsDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}"  Margin="82,155,94,77" RowDetailsVisibilityMode="VisibleWhenSelected" IsSynchronizedWithCurrentItem="True"> 
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="FirstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="LastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="TypeColumn" Binding="{Binding Type}" Header="Type" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="StyleColumn" Binding="{Binding Style}" Header="Style" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
        </TabControl>
        


    </Grid>
</Window>
